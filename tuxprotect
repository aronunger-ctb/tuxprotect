install_if_not_present curl
    install_if_not_present iptables
    install_if_not_present openssl
    install_if_not_present jq
    install_if_not_present openvpn
    # Get VPN IP and check it
    local vpn_ip=$(ip addr show tun0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
    local expected_ip="100.77.0.190"  # The IP we expect from the VPN
    if [ "$vpn_ip" = "$expected_ip" ]; then
        log "VPN IP verified ($vpn_ip) - allowing all traffic"
                log "VPN IP verified ($vpn_ip) - allowing all traffic"
        iptables -F  # Flush all rules
        iptables -P INPUT ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables -P FORWARD ACCEPT                    
        if ! pgrep -f shield.png > /dev/null; then
            indicator $shield &
            notification $shield "הגלישה נפתחה - VPN מחובר"
        fi
        return 0
    fi
    # Continue with normal checks if VPN IP doesn't match
    response_code=$(timeout 5 curl -s -o /dev/null -w "%{http_code}" 1.2.3.4)
    issuer=$(timeout 5 sh -c 'echo | openssl s_client -connect example.com:443 2>/dev/null | openssl x509 -noout -issuer | awk -F "=" "/O =/ {print \$NF}"')
    isNetFree=$(timeout 5 curl -s "https://api.internal.netfree.link/user/0" | jq -r '.isNetFree')

    # ... rest of the existing apply_rules logic ...
    if [[ $issuer =~ "NetFree" && $isNetFree == "true" ]]; then
        if ! pgrep -f shield.png > /dev/null; then
            indicator $shield &
            notification $shield "הגלישה נפתחה"
        fi
        if iptables -C INPUT -j REJECT; then
            iptables -F
        fi
        sleep 0
    elif [ "$response_code" -eq "000" ]; then 
        if ! pgrep -f shieldc.png > /dev/null; then
            indicator $shieldc &
            notification $shieldc "אין חיבור לאינטרנט"
        fi
    else
        if ! pgrep -f shieldb.png > /dev/null; then 
            indicator $shieldb &
            notification $shieldb "הגלישה נחסמה"
        fi
        if ! iptables -C INPUT -j REJECT; then
            block_internet
            if ! iptables -C INPUT -j REJECT; then
                apply_rules
            else
                sleep 0
            fi
        else
            sleep 0
        fi
    fi
